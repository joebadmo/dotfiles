set-option -g default-shell ${HOMEBREW_PREFIX}/bin/zsh

# Get equipped with: system clipboard
# ===================================
set -g xterm-keys on

set -s set-clipboard on
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi Escape send-keys -X clear-selection
bind -T copy-mode-vi y send-keys -X copy-pipe "pbcopy" \; send-keys -X clear-selection
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# so esc register immediately
set -s escape-time 0

# more history
set-option -g history-limit 5000

# focus events so `autoread` works in neovim
set-option -g focus-events on

# fix the prefix
# ==============

set -g prefix C-a
# unbind C-b
# bind C-a send-prefix

# Get equipped with: vi controls
# ==============================

set-option -w -g mode-keys vi
bind [ copy-mode

# reload config
# ==============

bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# Session Management and Navigation
# ======================================

bind C-f choose-session
bind C-c new-session
bind C-p switch-client -p
bind C-n switch-client -n

# Window (tab) Management and Navigation
# ======================================

unbind c
bind c new-window -c '#{pane_current_path}'

bind -r z last-window
bind , command-prompt "rename-window '%%'"

# Pane Management and Navigation
# ================================

# splitting vertically

unbind %
bind v split-window -h -c '#{pane_current_path}'
bind -r up resize-pane -U 1
bind -r down resize-pane -D 1

# splitting horizontally

unbind '"'
bind s split-window -v -c '#{pane_current_path}'
bind -r left resize-pane -L 1
bind -r right resize-pane -R 1

# navigate like vim

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r space select-pane -t:.+

# reorder windows
unbind 't'
bind -r t swap-window -d -t +1
bind -r T swap-window -d -t -1

# pane borders

set -g @active-pane-border-style 'fg=#899BA6,bg=black'
set -g @active-pane-active-border-style 'fg=white,bg=black'
set -g @inactive-pane-border-style 'fg=black,bg=black'
set -g @inactive-pane-active-border-style 'fg=black,bg=black'

# pane status

set -g pane-border-status bottom
set -g pane-border-format '─'

# message text

set -g message-style 'fg=cyan, bg=black'

# status bar

set -g status-position bottom
set -g status-left-length 20
set -g status-right ''
set -g status-interval 1

set -g @path_format '\
#{\
s|/Users/moon|~|;\
s|/home/moon|~|;\
s|~/| |;\
s|~||;\
s| stripe/| |;\
s| stripe||;\
s| pay-server| ~pay|;\
s| ~pay/manage/frontend| ~dashboard;\
s| .dotfiles| |;\
s|~/stripe/pay-server|~pay|;\
s| todo.wiki| |;\
:pane_current_path\
}'

set -g @command_format '\
#{\
s|zsh| ;\
s|bash| ;\
s|nvim| ;\
s|ruby| ;\
s|tmux| ;\
s|node| ;\
s|python.*| ;\
:pane_current_command\
}'

set -g @local_format '#{E:@path_format} #{E:@command_format}'
set -g @conditional_format '\
#{?\
#{m/r: ,#{pane_title}},\
#{E:pane_title},\
#{E:@local_format}\
}'

if-shell '[ -n "$SSH_CLIENT" ]'\
    "set -g @custom_format '#{E:@local_format}'"\
    "set -g @custom_format '#{E:@conditional_format}'"

set -g window-status-format ' #{E:@custom_format} '
set -g window-status-current-format ' #{E:@custom_format} '

set -g monitor-activity on
set -g set-titles on

# colors
set -g default-terminal 'tmux-256color'

if-shell \
  '[ $(echo "$TMUX_VERSION >= 3.2" | bc -l) == 1 ]' \
  'set -as terminal-features ",alacritty:RGB"'

set -as terminal-overrides ",tmux-256color:RGB,alacritty:RGB"

if-shell \
    '[ -n "$SSH_CLIENT" ]'\
    'set -g set-titles-string "#{pane_title}"; \
    bind Up source-file ~/.config/tmux/active-session.conf; \
    bind Down source-file ~/.config/tmux/inactive-session.conf; \
    source-file ~/.config/tmux/inactive-session.conf;' \
    'set -g set-titles-string "#{session_name}"; \
    source-file ~/.config/tmux/active-session.conf;'

# nested session

bind -T root C-b  \
  set prefix None \;\
  set key-table nested \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  send-keys C-a Up \;\
  source-file ~/.config/tmux/inactive-session.conf

bind -T nested C-b \
  set -u prefix \;\
  set -u key-table \;\
  send-keys C-a Down \;\
  source-file ~/.config/tmux/active-session.conf

# https://github.com/tmux-plugins/tpm/blob/95f78336c3972f3e6648b7b3db754f2224320a5e/docs/changing_plugins_install_dir.md
# set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins/tpm/'
# List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'

# https://github.com/tmux-plugins/tpm/issues/67#issuecomment-319560247
# set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run -b '~/.config/tmux/plugins/tpm/tpm'

# new-session -A -s "home"
# if-shell \
# "[ -d "$HOME/stripe" ]" \
# "new-session -A -s 'stripe' -c '$HOME/stripe/todo.wiki'; \
# new-window -a -d -t '{end}' -n 'pay' -c $HOME/stripe/pay-server; \
# new-window -a -d -t '{end}' -c $HOME/stripe/pay-server; \
# new-window -a -d -t '{end}' -c $HOME/stripe/pay-server/manage; \
# new-window -a -d -t '{end}' -c $HOME/stripe/pay-server/manage/frontend"
